buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
        classpath "org.grails.plugins:hibernate5:6.0.3"
    }
}

version "1.3.5"
group "com.binxhealth"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-web-testing-support"

    // grails HTTPBuilder plugin
    compile('org.grails.plugins:http-builder-helper:1.0.2') {
        exclude group: 'xml-apis'
        exclude group: 'xerces'
    }

    // hibernate
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.5.Final"

    // Postgres
    compile 'org.grails.plugins:postgresql-extensions:4.7.0'
    provided "org.postgresql:postgresql:42.2.2.jre7"

    // Mock server for testing outgoing requests
    testCompile 'com.stehno.ersatz:ersatz:1.5.0'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    userOrg = 'binxhealth'
    githubSlug = 'hermes'
    license {
        name = 'Apache-2.0'
    }
    title = "Hermes"
    desc = "A Grails plugin providing guaranteed one-time delivery for HTTP requests"
    developers = [mauracwarner:"Maura Warner"]
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = 'https://maven.pkg.github.com/binxhealth/hermes'
            credentials {
                username "${System.getenv('GPR_USER')}"
                password "${System.getenv('GPR_API_TOKEN')}"
            }
        }
    }
}

assets {
    packagePlugin = false
}
